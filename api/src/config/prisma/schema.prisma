datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String     @unique
  password    String
  gender      Gender?
  dateOfBirth String?
  isBlocked   Boolean    @default(false)
  role        Role       @default(USER)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  posts       Post[]
  activities  Activity[] @relation(fields: [activityIDs], references: [id])
  activityIDs String[]   @db.ObjectId

  @@map("users")
}

model Post {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  category  PostCategory?
  images    PostImage[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  user      User          @relation(fields: [userId], references: [id])
  userId    String        @db.ObjectId

  @@map("posts")
}

model PostImage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   Bytes
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts_images")
}

model HeadOffice {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  location      String     @unique
  streetAddress String
  coordinates   String
  activities    Activity[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("headoffices")
}

model Activity {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String?
  dateOfPerformance DateTime
  mode              Mode
  availability      Int
  headOffice        HeadOffice @relation(fields: [headOfficeId], references: [id])
  headOfficeId      String     @db.ObjectId
  users             User[]     @relation(fields: [userIDs], references: [id])
  userIDs           String[]   @db.ObjectId
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  @@map("activities")
}

enum PostCategory {
  HERE_IT_IS
  HELP_ME
  LOOKING_FOR_PARTNER
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Role {
  USER
  ADMIN
}

enum Mode {
  ONLINE
  IN_PERSON
}
